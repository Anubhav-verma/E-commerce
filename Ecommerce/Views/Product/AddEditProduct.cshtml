@model Ecommerce.Models.product 
@using Ecommerce.Business
@{
            

            ViewBag.Title = "Add Product";
            Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h1>Add Product</h1>
    @using (Html.BeginForm("AddEditProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x=>x.product_id, Model.product_id)
        @Html.HiddenFor(x=>x.created_at, Model.created_at)
        @Html.HiddenFor(x=>x.image_url, Model.image_url)
        
        <div class="form-group">
            @Html.Label("Product Name", new { @class = "control-label" })
            @Html.TextBoxFor(m => m.name, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Description", new { @class = "control-label" })
            @Html.TextAreaFor(m => m.description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Category", new { @class = "control-label" })
            @Html.DropDownListFor(m => m.category_id, ProductManager.GetCategoryList(), "Select a Category", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.category_id, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Quantity", new { @class = "control-label" })
            @Html.TextBoxFor(m => m.quantity, new { @class = "form-control", required = "required", type = "number", step = "0.01" })
            @Html.ValidationMessageFor(m => m.quantity, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.price, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.price, new { @class = "form-control", required = "required", type = "number", step = "0.01" })
            @Html.ValidationMessageFor(m => m.price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Upload Image", new { @class = "control-label" })
            <input type="file" name="Image" id="Image" class="form-control-file" accept=".jpg,.jpeg,.png,.gif">
            @Html.ValidationMessageFor(m => m.image_url, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Add Product</button>
        </div>
    }
</div>
